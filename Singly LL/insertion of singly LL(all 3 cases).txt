public class Main
{
    private ListNode head;
    
    //  ListNode class
    private static class ListNode
    {
        private int data;
        private ListNode next;
        
        public ListNode(int data)
        {
            this.data=data;
            this.next=null;
        }
    }
    
    // Printing the linked list
    public void print()
    {
        ListNode current=head;
        while(current != null)
        {
            System.out.print(current.data+"-->");
            current=current.next;
        }
        System.out.print("null"+"\n");
    }
    
    // INSERT AT BEGINNING
    public void insertFirst(int d)
    {
        ListNode newnode=new ListNode(d);
        newnode.next=head;
        head=newnode;
    }
    
    // INSERT AT ENDING
    public void insertEnd(int d)
    {
        ListNode newnode=new ListNode(d);
        if(head==null)
        {
            head=newnode;
            return;
        }
        ListNode current=head;
        while(current.next != null)
        {
            current=current.next;
        }
        current.next=newnode;
    }
    
    // INSERTION AT MIDDLE
    public void insertMiddle(int d, int pos)
    {
        ListNode newnode=new ListNode(d);
        if(pos==1)
        {
            newnode.next=head;
            head=newnode;
        }
        else
        {
            ListNode prev=head;
            int count=1;
            while(count<pos-1)
            {
                prev=prev.next;
                count++;
            }
            newnode.next=prev.next;
            prev.next=newnode;
        }
    }
    
    // CREATION 
    public static void main(String [] args)
    {
        Main ll = new Main();
        ll.head= new ListNode(10);
        ListNode second=new ListNode(20);
        ListNode third=new ListNode(30);
        ListNode fourth=new ListNode(40);
        
        // connect them by their next pointers
        ll.head.next=second;
        second.next=third;
        third.next=fourth;
       
        ll.print();
        // inserting at begin
        ll.insertFirst(2);
        ll.print();
        // inserting at end
        ll.insertEnd(50);
        ll.print();
        // insetting at middle
        ll.insertMiddle(25,4);
        ll.print();
    }
}

