public class Main
{
    private ListNode head;
    
    // CREATION
    private static class ListNode
    {
        private int data;
        private ListNode next;
        
        public ListNode(int data)
        {
            this.data=data;
            this.next=null;
        }
    }
    
    // Printing
    public void print()
    {
        ListNode curr=head;
        while(curr!=null)
        {
            System.out.print(curr.data+"->");
            curr=curr.next;
        }
        System.out.print("null");
        System.out.println();
    }
    
    // finding nth node from end using 1 pass
    public ListNode nthNode(int n)
    {
        ListNode refptr=head;
        ListNode mainptr=head;
        int count=0;
        while(count<n)
        {
            refptr=refptr.next;
        }
        while(refptr!=null)
        {
            mainptr=mainptr.next;
            refptr=refptr.next;
        }
        return mainptr;
    }
	public static void main(String[] args) 
	{
	    Main ll=new Main();
	    
	    ll.head=new ListNode(10);
	    ListNode second=new ListNode(20);
	    ListNode third=new ListNode(30);
	    ListNode fourth=new ListNode(40);
	    ListNode fifth=new ListNode(50);
	    ll.head.next=second;
	    second.next=third;
	    third.next=fourth;
	    fourth.next=fifth;
	    
	    System.out.println("nth node from end is:"+ll.nthNode(2).data);
	    ll.print();
	}
}
